{"version":3,"sources":["components/Card.js","components/CardList.js","components/SearchBox.js","components/ErrorBoundries.js","components/Scroll.js","containers/App.js","index.js"],"names":["Card","name","email","id","className","alt","src","CardList","robots","map","user","i","SearchBox","searchChange","type","placeholder","onChange","ErrorBoundry","props","state","hasError","error","info","this","setState","children","Component","Scroll","style","overflowY","border","height","App","useState","setRobots","searchfield","setSearchfield","useEffect","fetch","then","response","json","users","filteredRobots","filter","robot","toLowerCase","includes","length","event","target","value","ReactDOM","render","document","getElementById"],"mappings":"6MAeeA,EAbF,SAAC,GAAyB,IAAvBC,EAAsB,EAAtBA,KAAMC,EAAgB,EAAhBA,MAAOC,EAAS,EAATA,GAC3B,OAEE,cADA,CACA,OAAKC,UAAU,sDAAf,UACE,qBAAKC,IAAI,QAAQC,IAAG,+BAA0BH,EAA1B,cACpB,gCACE,6BAAKF,IACL,4BAAIC,WCcGK,EApBE,SAAC,GAAgB,IAAdC,EAAa,EAAbA,OAElB,OACE,8BAEIA,EAAOC,KAAI,SAACC,EAAMC,GAChB,OACE,cAAC,EAAD,CAEER,GAAIK,EAAOG,GAAGR,GACdF,KAAMO,EAAOG,GAAGV,KAChBC,MAAOM,EAAOG,GAAGT,OAHZS,SCIJC,EAbG,SAAC,GAAsB,IAApBC,EAAmB,EAAnBA,aACnB,OACE,qBAAKT,UAAU,MAAf,SACE,uBACEA,UAAU,sDACVU,KAAK,SACLC,YAAY,gBACZC,SAAUH,O,4BCcHI,E,kDApBb,WAAYC,GAAQ,IAAD,8BACjB,cAAMA,IACDC,MAAQ,CACXC,UAAU,GAHK,E,qDAOnB,SAAkBC,EAAOC,GACvBC,KAAKC,SAAS,CAACJ,UAAU,M,oBAG3B,WACE,OAAIG,KAAKJ,MAAMC,SACN,4DAEAG,KAAKL,MAAMO,a,GAhBGC,aCQZC,G,MARA,SAACT,GACd,OACE,qBAAKU,MAAO,CAACC,UAAW,SAAUC,OAAQ,kBAAmBC,OAAQ,SAArE,SACGb,EAAMO,aCyCEO,MAvCf,WAAe,MAEeC,mBAAS,IAFxB,mBAENzB,EAFM,KAEE0B,EAFF,OAGyBD,mBAAS,IAHlC,mBAGNE,EAHM,KAGOC,EAHP,KAKbC,qBAAU,WACRC,MAAM,8CACLC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAG,GAAUR,EAAUQ,QACzB,IAIH,IAKMC,EAAiBnC,EAAOoC,QAAO,SAAAC,GACnC,OAAOA,EAAM5C,KAAK6C,cAAcC,SAASZ,EAAYW,kBAGvD,OAAKtC,EAAOwC,OAIR,sBAAK5C,UAAU,KAAf,UACE,oBAAIA,UAAU,KAAd,yBACA,cAAC,EAAD,CAAWS,aAfM,SAACoC,GACtBb,EAAea,EAAMC,OAAOC,UAexB,cAAC,EAAD,UACE,cAAC,EAAD,UACE,cAAC,EAAD,CAAU3C,OAAQmC,WARnB,oBAAIvC,UAAU,KAAd,sB,MCxBXgD,IAASC,OACG,cAAC,EAAD,IACCC,SAASC,eAAe,W","file":"static/js/main.b30f421c.chunk.js","sourcesContent":["import React from 'react';\n\nconst Card = ({ name, email, id }) => {\n  return (\n    // THis is not html, this is JSX!\n    <div className='tc bg-light-green dib br3 pa3 ma2 grow bw2 shadow-5'>\n      <img alt='Robot' src={`https://robohash.org/${id}?200x200`} />\n      <div>\n        <h2>{name}</h2>\n        <p>{email}</p>\n      </div>\n    </div>\n  );\n}\n\nexport default Card;\n","import React from 'react';\nimport Card from './Card';\n\nconst CardList = ({ robots }) => {\n\n  return (\n    <div>\n      {\n        robots.map((user, i) => {\n          return (\n            <Card\n              key={i}\n              id={robots[i].id}\n              name={robots[i].name}\n              email={robots[i].email}\n              />\n            );\n        })\n      }\n    </div>\n  );\n}\n\nexport default CardList;\n","import React from 'react';\n\nconst SearchBox = ({ searchChange }) => {\n  return (\n    <div className='pa2'>\n      <input\n        className='tc bg-light-green dib br3 pa3 ma2 grow bw2 shadow-5'\n        type='search'\n        placeholder='search robots'\n        onChange={searchChange}\n        />\n    </div>\n  );\n}\n\nexport default SearchBox;\n","import React, { Component } from 'react';\n\nclass ErrorBoundry extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      hasError: false\n    }\n  }\n\n  componentDidCatch(error, info) {\n    this.setState({hasError: true})\n  }\n\n  render() {\n    if (this.state.hasError) {\n      return <h1>Oooooops. That is not good</h1>\n    } else {\n      return this.props.children\n    }\n  }\n}\n\nexport default ErrorBoundry;\n","import React from 'react';\n\nconst Scroll = (props) => {\n  return (\n    <div style={{overflowY: 'scroll', border: '5px solid black', height: '800px'}}>\n      {props.children}\n    </div>\n  )\n};\n\nexport default Scroll;\n","import React, { useState, useEffect } from 'react';\nimport CardList from '../components/CardList';\nimport SearchBox from '../components/SearchBox';\nimport ErrorBoundry from '../components/ErrorBoundries'\nimport './App.css';\nimport Scroll from '../components/Scroll'\n\nfunction App() {\n  // Hooks, useState is returning a piece of state[0] and a function to change it.[1]\n  const [robots, setRobots] = useState([])\n  const [searchfield, setSearchfield] = useState('')\n\n  useEffect(()=> {\n    fetch('https://jsonplaceholder.typicode.com/users')\n    .then(response => response.json())\n    .then(users => {setRobots(users)});\n  }, [])\n\n\n\n  const onSearchChange = (event) => {\n    setSearchfield(event.target.value)\n}\n\n  // const {robots, searchfield } = state;\n  const filteredRobots = robots.filter(robot => {\n    return robot.name.toLowerCase().includes(searchfield.toLowerCase())\n  })\n\n  if (!robots.length) {\n    return <h1 className='tc'>Loading</h1>\n  } else {\n    return (\n      <div className='tc'>\n        <h1 className='f1'>RoboFriends</h1>\n        <SearchBox searchChange={onSearchChange}/>\n        <Scroll>\n          <ErrorBoundry>\n            <CardList robots={filteredRobots}/>\n          </ErrorBoundry>\n        </Scroll>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './containers/App';\nimport 'tachyons';\n\nReactDOM.render(\n            <App />\n            ,document.getElementById('root'));\n"],"sourceRoot":""}